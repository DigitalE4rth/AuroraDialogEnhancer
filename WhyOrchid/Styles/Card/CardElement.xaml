<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:WhyOrchid.Controls"
                    xmlns:properties="clr-namespace:WhyOrchid.Properties">

    <Style x:Key="FocusVisualStyle">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border BorderBrush="{Binding Source={x:Static properties:Settings.Default}, Path=Color_Primary, Mode=OneTime}"
                            BorderThickness="3"
                            CornerRadius="{Binding Source={x:Static properties:Settings.Default}, Path=UI_CardCornerRadius, Mode=OneTime}"
                            Opacity="0.38" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type controls:CardElement}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Background" Value="{Binding Source={x:Static properties:Settings.Default}, Path=Color_Surface, Mode=OneTime}" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisualStyle}" />
        <Setter Property="HorizontalContentAlignment" Value="Right" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="15,5" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{Binding Source={x:Static properties:Settings.Default}, Path=Color_OutlineVariant, Mode=OneTime}" />
        <Setter Property="CornerRadius" Value="{Binding Source={x:Static properties:Settings.Default}, Path=UI_CardCornerRadius, Mode=OneTime}" />
        <Setter Property="ContentMargin" Value="0,0,15,0" />
        <Setter Property="LeftIconMargin" Value="0,0,15,0" />
        <Setter Property="TitleDescriptionMargin" Value="0,0,15,0" />
        <Setter Property="DescriptionMargin" Value="0,3,0,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:CardElement}">
                    <Grid x:Name="GridWrapper">

                        <!--  Background overlay  -->
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}" />

                        <Grid Margin="{TemplateBinding Padding}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <!--  Left icon  -->
                            <ContentControl x:Name="LeftIcon"
                                            Grid.Column="0"
                                            Margin="{TemplateBinding LeftIconMargin}"
                                            VerticalAlignment="Center"
                                            Content="{TemplateBinding LeftIcon}"
                                            Focusable="False"
                                            IsHitTestVisible="False" />

                            <Grid x:Name="GridTitleDescription"
                                  Grid.Column="1"
                                  Margin="{TemplateBinding TitleDescriptionMargin}"
                                  VerticalAlignment="Center">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>

                                <!--  Title  -->
                                <ContentControl x:Name="TitleContent"
                                                Grid.Row="0"
                                                Content="{TemplateBinding Title}"
                                                Focusable="False"
                                                IsHitTestVisible="False"
                                                TextElement.Foreground="{Binding Source={x:Static properties:Settings.Default}, Path=Color_OnSurface, Mode=OneTime}" />

                                <!--  Description  -->
                                <ContentControl x:Name="DescriptionContent"
                                                Grid.Row="1"
                                                Margin="{TemplateBinding DescriptionMargin}"
                                                Content="{TemplateBinding Description}"
                                                Focusable="False"
                                                IsHitTestVisible="False"
                                                TextElement.Foreground="{Binding Source={x:Static properties:Settings.Default}, Path=Color_OnSurfaceVariant, Mode=OneTime}" />
                            </Grid>

                            <!--  Content  -->
                            <ContentPresenter x:Name="ContentPresenter"
                                              Grid.Column="2"
                                              Margin="{TemplateBinding ContentMargin}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              TextElement.Foreground="{Binding Source={x:Static properties:Settings.Default}, Path=Color_OnSurface, Mode=OneTime}" />

                            <!--  Right icon  -->
                            <ContentControl x:Name="RightIcon"
                                            Grid.Column="3"
                                            VerticalAlignment="Center"
                                            Content="{TemplateBinding RightIcon}"
                                            Focusable="False"
                                            IsHitTestVisible="False" />
                        </Grid>
                    </Grid>

                    <ControlTemplate.Triggers>

                        <Trigger Property="LeftIcon" Value="{x:Null}">
                            <Setter TargetName="LeftIcon" Property="Visibility" Value="Collapsed" />
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Title" Value="{x:Null}" />
                                <Condition Property="Description" Value="{x:Null}" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="GridTitleDescription" Property="Visibility" Value="Collapsed" />
                        </MultiTrigger>

                        <Trigger Property="Description" Value="{x:Null}">
                            <Setter TargetName="DescriptionContent" Property="Visibility" Value="Collapsed" />
                        </Trigger>

                        <Trigger Property="Content" Value="{x:Null}">
                            <Setter TargetName="ContentPresenter" Property="Visibility" Value="Collapsed" />
                        </Trigger>

                        <Trigger Property="RightIcon" Value="{x:Null}">
                            <Setter TargetName="RightIcon" Property="Visibility" Value="Collapsed" />
                        </Trigger>

                        <Trigger Property="ContentForeground" Value="Secondary">
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{Binding Source={x:Static properties:Settings.Default}, Path=Color_OnSurfaceVariant, Mode=OneTime}" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>