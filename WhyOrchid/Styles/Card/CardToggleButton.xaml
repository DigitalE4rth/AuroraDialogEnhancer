<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:WhyOrchid.Controls"
                    xmlns:properties="clr-namespace:WhyOrchid.Properties">

    <Style x:Key="CardButtonFocusVisualStyle">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border BorderBrush="{Binding Source={x:Static properties:Settings.Default}, Path=Color_Primary, Mode=OneTime}"
                            BorderThickness="3"
                            CornerRadius="{Binding Source={x:Static properties:Settings.Default}, Path=UI_CardCornerRadius, Mode=OneTime}"
                            Opacity="0.38" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type controls:CardToggleButton}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Background" Value="{Binding Source={x:Static properties:Settings.Default}, Path=Color_Surface, Mode=OneTime}" />
        <Setter Property="Cursor" Value="{Binding Source={x:Static properties:Settings.Default}, Path=UI_CursorType, Mode=OneTime}" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource CardButtonFocusVisualStyle}" />
        <Setter Property="HorizontalContentAlignment" Value="Right" />
        <Setter Property="Padding" Value="15,5" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{Binding Source={x:Static properties:Settings.Default}, Path=Color_OutlineVariant, Mode=OneTime}" />
        <Setter Property="CornerRadius" Value="{Binding Source={x:Static properties:Settings.Default}, Path=UI_CardCornerRadius, Mode=OneTime}" />
        <Setter Property="LeftIconMargin" Value="0,0,15,0" />
        <Setter Property="TitleDescriptionMargin" Value="0,0,15,0" />
        <Setter Property="DescriptionMargin" Value="0,3,0,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:CardToggleButton}">
                    <Grid x:Name="GridWrapper">

                        <!--  Background overlay  -->
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}" />

                        <!--  Hover overlay  -->
                        <Border x:Name="HoverOverlay"
                                Background="{Binding Source={x:Static properties:Settings.Default}, Path=Color_Interaction, Mode=OneTime}"
                                BorderBrush="Transparent"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                Opacity="0" />

                        <!--  Click overlay  -->
                        <Border x:Name="ClickOverlay"
                                Background="{Binding Source={x:Static properties:Settings.Default}, Path=Color_Interaction, Mode=OneTime}"
                                BorderBrush="Transparent"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                Opacity="0" />

                        <Grid Margin="{TemplateBinding Padding}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <!--  Left icon  -->
                            <ContentControl x:Name="LeftIcon"
                                            Grid.Column="0"
                                            Margin="{TemplateBinding LeftIconMargin}"
                                            VerticalAlignment="Center"
                                            Content="{TemplateBinding LeftIcon}"
                                            Focusable="False"
                                            IsHitTestVisible="False" />

                            <Grid x:Name="GridTitleDescription"
                                  Grid.Column="1"
                                  Margin="{TemplateBinding TitleDescriptionMargin}"
                                  VerticalAlignment="Center">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>

                                <!--  Title  -->
                                <ContentControl x:Name="TitleContent"
                                                Grid.Row="0"
                                                Content="{TemplateBinding Title}"
                                                Focusable="False"
                                                IsHitTestVisible="False"
                                                TextElement.Foreground="{Binding Source={x:Static properties:Settings.Default}, Path=Color_OnSurface, Mode=OneTime}" />

                                <!--  Description  -->
                                <ContentControl x:Name="DescriptionContent"
                                                Grid.Row="1"
                                                Margin="{TemplateBinding DescriptionMargin}"
                                                Content="{TemplateBinding Description}"
                                                Focusable="False"
                                                IsHitTestVisible="False"
                                                TextElement.Foreground="{Binding Source={x:Static properties:Settings.Default}, Path=Color_OnSurfaceVariant, Mode=OneTime}" />
                            </Grid>

                            <!--  Content  -->
                            <ContentPresenter x:Name="ContentPresenter"
                                              Grid.Column="2"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              TextElement.Foreground="{Binding Source={x:Static properties:Settings.Default}, Path=Color_OnSurface, Mode=OneTime}" />


                            <!--  Toggle Switch  -->
                            <Grid x:Name="ToggleSwitch"
                                  Grid.Column="3"
                                  HorizontalAlignment="Right"
                                  RenderOptions.BitmapScalingMode="NearestNeighbor">
                                <Grid x:Name="OffBackground" Opacity="1">
                                    <Border Width="48"
                                            Height="26"
                                            Background="{Binding Source={x:Static properties:Settings.Default}, Path=Color_InverseSurface, Mode=OneTime}"
                                            CornerRadius="13"
                                            Opacity="0.13" />

                                    <Border x:Name="OffHoverOverlay"
                                            Width="48"
                                            Height="26"
                                            Background="{Binding Source={x:Static properties:Settings.Default}, Path=Color_OnSurface, Mode=OneTime}"
                                            CornerRadius="13"
                                            Opacity="0" />
                                </Grid>

                                <Grid x:Name="OnBackground" Opacity="0">
                                    <Border Width="48"
                                            Height="26"
                                            Background="{Binding Source={x:Static properties:Settings.Default}, Path=Color_Primary, Mode=OneTime}"
                                            CornerRadius="13"
                                            Opacity="1" />

                                    <Border Width="48"
                                            Height="26"
                                            CornerRadius="13"
                                            Opacity="0.1">
                                        <Border.Background>
                                            <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                                <GradientStop Offset="0" Color="{Binding Source={x:Static properties:Settings.Default}, Path=Color_Surface, Mode=OneTime}" />
                                                <GradientStop Offset="0.45" Color="Transparent" />
                                                <GradientStop Offset="0.65" Color="Transparent" />
                                                <GradientStop Offset="1" Color="{Binding Source={x:Static properties:Settings.Default}, Path=Color_Surface, Mode=OneTime}" />
                                            </LinearGradientBrush>
                                        </Border.Background>
                                    </Border>

                                    <Border x:Name="OnHoverOverlay"
                                            Width="48"
                                            Height="26"
                                            Background="White"
                                            CornerRadius="13"
                                            Opacity="0" />
                                </Grid>

                                <Border x:Name="PinButton"
                                        Width="20"
                                        Height="20"
                                        Margin="4,0,0,0"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Center"
                                        Background="{Binding Source={x:Static properties:Settings.Default}, Path=Color_OnPrimary, Mode=OneTime}"
                                        CornerRadius="11">
                                    <Border.Effect>
                                        <DropShadowEffect BlurRadius="8"
                                                          Opacity="0.1"
                                                          ShadowDepth="0"
                                                          Color="{Binding Source={x:Static properties:Settings.Default}, Path=Color_Shadow, Mode=OneTime}" />
                                    </Border.Effect>
                                </Border>
                            </Grid>

                            <!--  Right icon  -->
                            <ContentControl x:Name="RightIcon"
                                            Grid.Column="4"
                                            VerticalAlignment="Center"
                                            Content="{TemplateBinding RightIcon}"
                                            Focusable="False"
                                            IsHitTestVisible="False" />
                        </Grid>
                    </Grid>

                    <ControlTemplate.Triggers>

                        <Trigger Property="LeftIcon" Value="{x:Null}">
                            <Setter TargetName="LeftIcon" Property="Visibility" Value="Collapsed" />
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Title" Value="{x:Null}" />
                                <Condition Property="Description" Value="{x:Null}" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="GridTitleDescription" Property="Visibility" Value="Collapsed" />
                        </MultiTrigger>

                        <Trigger Property="Description" Value="{x:Null}">
                            <Setter TargetName="DescriptionContent" Property="Visibility" Value="Collapsed" />
                        </Trigger>

                        <Trigger Property="Content" Value="{x:Null}">
                            <Setter TargetName="ContentPresenter" Property="Visibility" Value="Collapsed" />
                        </Trigger>

                        <Trigger Property="RightIcon" Value="{x:Null}">
                            <Setter TargetName="RightIcon" Property="Visibility" Value="Collapsed" />
                        </Trigger>

                        <EventTrigger RoutedEvent="controls:CardToggleButton.Loaded">
                            <SkipStoryboardToFill BeginStoryboardName="CheckedStoryboard" />
                            <SkipStoryboardToFill BeginStoryboardName="UnCheckedStoryboard" />
                        </EventTrigger>

                        <EventTrigger RoutedEvent="MouseEnter" SourceName="ToggleSwitch">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="OffHoverOverlay"
                                                     Storyboard.TargetProperty="Opacity"
                                                     From="0"
                                                     To="0.08"
                                                     Duration="0:0:0.1" />

                                    <DoubleAnimation Storyboard.TargetName="OnHoverOverlay"
                                                     Storyboard.TargetProperty="Opacity"
                                                     From="0"
                                                     To="0.15"
                                                     Duration="0:0:0.1" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="MouseLeave" SourceName="ToggleSwitch">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="OffHoverOverlay"
                                                     Storyboard.TargetProperty="Opacity"
                                                     From="0.08"
                                                     To="0"
                                                     Duration="0:0:0.1" />

                                    <DoubleAnimation Storyboard.TargetName="OnHoverOverlay"
                                                     Storyboard.TargetProperty="Opacity"
                                                     From="0.15"
                                                     To="0"
                                                     Duration="0:0:0.1" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="HoverOverlay"
                                                     Storyboard.TargetProperty="Opacity"
                                                     From="0"
                                                     To="1"
                                                     Duration="0:0:0.1" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="HoverOverlay"
                                                     Storyboard.TargetProperty="Opacity"
                                                     From="1"
                                                     To="0"
                                                     Duration="0:0:0.1" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="PreviewMouseDown">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="ClickOverlay"
                                                     Storyboard.TargetProperty="Opacity"
                                                     From="0"
                                                     To="1"
                                                     Duration="0:0:0.1" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="PreviewMouseUp">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="ClickOverlay"
                                                     Storyboard.TargetProperty="Opacity"
                                                     From="1"
                                                     To="0"
                                                     Duration="0:0:0.1" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <Trigger Property="controls:CardToggleButton.IsChecked" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="CheckedStoryboard">
                                    <Storyboard>
                                        <ThicknessAnimation Storyboard.TargetName="PinButton"
                                                            Storyboard.TargetProperty="Margin"
                                                            To="24,0,0,0"
                                                            Duration="0:0:0.1" />

                                        <DoubleAnimation Storyboard.TargetName="OffBackground"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0"
                                                         Duration="0:0:0.1" />

                                        <DoubleAnimation Storyboard.TargetName="OnBackground"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1"
                                                         Duration="0:0:0.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>

                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="UnCheckedStoryboard">
                                    <Storyboard>
                                        <ThicknessAnimation Storyboard.TargetName="PinButton"
                                                            Storyboard.TargetProperty="Margin"
                                                            To="4,0,0,0"
                                                            Duration="0:0:0.1" />

                                        <DoubleAnimation Storyboard.TargetName="OnBackground"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0"
                                                         Duration="0:0:0.1" />

                                        <DoubleAnimation Storyboard.TargetName="OffBackground"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1"
                                                         Duration="0:0:0.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>