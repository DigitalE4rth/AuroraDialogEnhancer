<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:WhyOrchid.Controls"
                    xmlns:properties="clr-namespace:WhyOrchid.Properties">

    <Style x:Key="FocusVisualStyle">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border Background="{Binding Source={x:Static properties:Settings.Default}, Path=Color_Interaction, Mode=OneTime}" CornerRadius="{Binding Source={x:Static properties:Settings.Default}, Path=UI_CardCornerRadius, Mode=OneTime}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type controls:MenuButton}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Cursor" Value="{Binding Source={x:Static properties:Settings.Default}, Path=UI_CursorType, Mode=OneTime}" />
        <Setter Property="Margin" Value="2" />
        <Setter Property="Padding" Value="12.5,0,12.5,0" />
        <Setter Property="IconMargin" Value="0,0,12.5,0" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisualStyle}" />
        <Setter Property="CornerRadius" Value="{Binding Source={x:Static properties:Settings.Default}, Path=UI_ButtonCornerRadius, Mode=OneTime}" />
        <Setter Property="Foreground" Value="{Binding Source={x:Static properties:Settings.Default}, Path=Color_OnSurface, Mode=OneTime}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:MenuButton}">
                    <Grid x:Name="templateRoot"
                          Background="Transparent"
                          SnapsToDevicePixels="True">

                        <!--  Checked overlay  -->
                        <Border x:Name="CheckOverlay"
                                Background="{Binding Source={x:Static properties:Settings.Default}, Path=Color_Interaction, Mode=OneTime}"
                                CornerRadius="{Binding Source={x:Static properties:Settings.Default}, Path=UI_CardCornerRadius, Mode=OneTime}"
                                Opacity="0" />

                        <!--  Click overlay  -->
                        <Border x:Name="ClickOverlay"
                                Background="{Binding Source={x:Static properties:Settings.Default}, Path=Color_Interaction, Mode=OneTime}"
                                CornerRadius="{Binding Source={x:Static properties:Settings.Default}, Path=UI_CardCornerRadius, Mode=OneTime}"
                                Opacity="0" />

                        <!--  Hover overlay  -->
                        <Border x:Name="HoverOverlay"
                                Background="{Binding Source={x:Static properties:Settings.Default}, Path=Color_Interaction, Mode=OneTime}"
                                CornerRadius="{Binding Source={x:Static properties:Settings.Default}, Path=UI_CardCornerRadius, Mode=OneTime}"
                                Opacity="0" />

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <!--  Bar checked  -->
                            <Grid x:Name="BarChecked"
                                  Grid.Column="0"
                                  Grid.ColumnSpan="2"
                                  Margin="1,10,0,10"
                                  HorizontalAlignment="Left"
                                  VerticalAlignment="Stretch"
                                  Opacity="0">

                                <Border Width="3"
                                        Background="{Binding Source={x:Static properties:Settings.Default}, Path=Color_Primary, Mode=OneTime}"
                                        CornerRadius="1.5" />

                                <Border Width="3"
                                        CornerRadius="1.5"
                                        Opacity="0.15">
                                    <Border.Background>
                                        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                            <GradientStop Offset="0" Color="Transparent" />
                                            <GradientStop Offset="1" Color="{Binding Source={x:Static properties:Settings.Default}, Path=Color_Surface, Mode=OneTime}" />
                                        </LinearGradientBrush>
                                    </Border.Background>
                                </Border>
                            </Grid>

                            <Grid Grid.Column="1" Margin="{TemplateBinding Padding}">

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>

                                <!--  Left icon  -->
                                <ContentControl x:Name="LeftIcon"
                                                Grid.Column="0"
                                                Margin="{TemplateBinding IconMargin}"
                                                VerticalAlignment="Center"
                                                Content="{TemplateBinding Icon}"
                                                Focusable="False"
                                                IsHitTestVisible="False"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                                <!--  Content  -->
                                <ContentPresenter x:Name="ContentPresenter"
                                                  Grid.Column="1"
                                                  Margin="{TemplateBinding ContentMargin}"
                                                  VerticalAlignment="Center"
                                                  RecognizesAccessKey="True"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  TextElement.Foreground="{TemplateBinding Foreground}" />
                            </Grid>

                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>

                        <Trigger Property="Icon" Value="{x:Null}">
                            <Setter TargetName="LeftIcon" Property="Visibility" Value="Collapsed" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.38" />
                        </Trigger>

                        <EventTrigger RoutedEvent="controls:MenuButton.Loaded">
                            <SkipStoryboardToFill BeginStoryboardName="CheckedStoryboard" />
                            <SkipStoryboardToFill BeginStoryboardName="UnCheckedStoryboard" />
                        </EventTrigger>

                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="CheckedStoryboard">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="BarChecked"
                                                         Storyboard.TargetProperty="Opacity"
                                                         From="0"
                                                         To="1"
                                                         Duration="0:0:0.1" />

                                        <DoubleAnimation Storyboard.TargetName="CheckOverlay"
                                                         Storyboard.TargetProperty="Opacity"
                                                         From="0"
                                                         To="1"
                                                         Duration="0:0:0.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>

                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="UnCheckedStoryboard">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="BarChecked"
                                                         Storyboard.TargetProperty="Opacity"
                                                         From="1"
                                                         To="0"
                                                         Duration="0:0:0.1" />

                                        <DoubleAnimation Storyboard.TargetName="CheckOverlay"
                                                         Storyboard.TargetProperty="Opacity"
                                                         From="1"
                                                         To="0"
                                                         Duration="0:0:0.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsChecked" Value="False" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverOverlay"
                                                         Storyboard.TargetProperty="Opacity"
                                                         From="0"
                                                         To="1"
                                                         Duration="0:0:0.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>

                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverOverlay"
                                                         Storyboard.TargetProperty="Opacity"
                                                         From="1"
                                                         To="0"
                                                         Duration="0:0:0.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>

                        <EventTrigger RoutedEvent="PreviewMouseDown">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="ClickOverlay"
                                                     Storyboard.TargetProperty="Opacity"
                                                     From="0"
                                                     To="1"
                                                     Duration="0:0:0.1" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="PreviewMouseUp">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="ClickOverlay"
                                                     Storyboard.TargetProperty="Opacity"
                                                     From="1"
                                                     To="0"
                                                     Duration="0:0:0.1" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
