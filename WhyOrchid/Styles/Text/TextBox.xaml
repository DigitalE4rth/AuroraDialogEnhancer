<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:WhyOrchid.Controls"
                    xmlns:properties="clr-namespace:WhyOrchid.Properties">

    <Style TargetType="{x:Type controls:TextBox}">
        <Setter Property="Background" Value="{Binding Source={x:Static properties:Settings.Default}, Path=Color_Surface, Mode=OneTime}" />
        <Setter Property="Foreground" Value="{Binding Source={x:Static properties:Settings.Default}, Path=Color_OnSurface, Mode=OneTime}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{Binding Source={x:Static properties:Settings.Default}, Path=Color_Outline, Mode=OneTime}" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="CornerRadius" Value="{Binding Source={x:Static properties:Settings.Default}, Path=UI_ButtonCornerRadius, Mode=OneTime}" />
        <Setter Property="CaretBrush" Value="{Binding Source={x:Static properties:Settings.Default}, Path=Color_Primary, Mode=OneTime}" />
        <Setter Property="FontFamily" Value="{Binding Source={x:Static properties:Settings.Default}, Path=FontStyle_FontFamily, Mode=OneTime}" />
        <Setter Property="FontSize" Value="{Binding Source={x:Static properties:Settings.Default}, Path=FontStyle_Medium, Mode=OneTime}" />
        <Setter Property="SelectionBrush" Value="{Binding Source={x:Static properties:Settings.Default}, Path=Color_Primary, Mode=OneTime}" />
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:TextBox}">

                    <Grid>
                        <!--  Background  -->
                        <Border Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding CornerRadius}" />

                        <!--  Border  -->
                        <Border x:Name="Border"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                Opacity="1" />

                        <!--  Hover  -->
                        <Border x:Name="BorderHover"
                                BorderBrush="{Binding Source={x:Static properties:Settings.Default}, Path=Color_Interaction, Mode=OneTime}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                Opacity="0" />

                        <!--  Keyboard Highlight  -->
                        <Border x:Name="HighlightBorder"
                                Margin="-2"
                                BorderBrush="{Binding Source={x:Static properties:Settings.Default}, Path=Color_Primary, Mode=OneTime}"
                                BorderThickness="3"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                Opacity="0" />

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <ContentPresenter x:Name="Icon"
                                              Grid.Column="0"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Content="{TemplateBinding Icon}" />

                            <ScrollViewer x:Name="PART_ContentHost"
                                          Grid.Column="1"
                                          Margin="5,0,5,0"
                                          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Focusable="false"
                                          HorizontalScrollBarVisibility="Hidden"
                                          VerticalScrollBarVisibility="Hidden" />
                        </Grid>
                    </Grid>

                    <ControlTemplate.Triggers>

                        <Trigger Property="Icon" Value="{x:Null}">
                            <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
                        </Trigger>

                        <Trigger Property="IsError" Value="True">
                            <Setter Property="CaretBrush" Value="{Binding Source={x:Static properties:Settings.Default}, Path=Color_Error, Mode=OneTime}" />
                            <Setter Property="SelectionBrush" Value="{Binding Source={x:Static properties:Settings.Default}, Path=Color_Error, Mode=OneTime}" />
                            <Setter Property="BorderBrush" Value="{Binding Source={x:Static properties:Settings.Default}, Path=Color_Error, Mode=OneTime}" />
                            <Setter TargetName="HighlightBorder" Property="BorderBrush" Value="{Binding Source={x:Static properties:Settings.Default}, Path=Color_Error, Mode=OneTime}" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.5" />
                        </Trigger>

                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="BorderHover"
                                                     Storyboard.TargetProperty="Opacity"
                                                     From="0"
                                                     To="1"
                                                     Duration="0:0:0.1" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="BorderHover"
                                                     Storyboard.TargetProperty="Opacity"
                                                     From="1"
                                                     To="0"
                                                     Duration="0:0:0.1" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HighlightBorder"
                                                         Storyboard.TargetProperty="Opacity"
                                                         From="0"
                                                         To="0.38"
                                                         Duration="0:0:0.1" />

                                        <DoubleAnimation Storyboard.TargetName="Border"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0"
                                                         Duration="0:0:0.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>

                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HighlightBorder"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0"
                                                         Duration="0:0:0.1" />

                                        <DoubleAnimation Storyboard.TargetName="Border"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1"
                                                         Duration="0:0:0.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true" />
                    <Condition Property="IsSelectionActive" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>