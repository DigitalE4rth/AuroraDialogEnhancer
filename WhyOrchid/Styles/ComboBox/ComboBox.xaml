<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:WhyOrchid.Controls"
                    xmlns:properties="clr-namespace:WhyOrchid.Properties"
                    xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2">

    <Style x:Key="FocusVisualStyle">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border BorderBrush="{Binding Source={x:Static properties:Settings.Default}, Path=Color_Primary, Mode=OneTime}"
                            BorderThickness="3"
                            CornerRadius="{Binding Source={x:Static properties:Settings.Default}, Path=UI_CardCornerRadius, Mode=OneTime}"
                            Opacity="0.38" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="WrapperToggle" TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="ClickMode" Value="Press" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter x:Name="ContentPresenter"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Focusable="False"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type controls:ComboBox}">
        <Grid x:Name="GridComboBox">
            <!--  Background overlay  -->
            <Border Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="{TemplateBinding CornerRadius}" />

            <!--  Hover overlay  -->
            <Border x:Name="HoverOverlay"
                    Background="{Binding Source={x:Static properties:Settings.Default}, Path=Color_Interaction, Mode=OneTime}"
                    BorderBrush="Transparent"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="{TemplateBinding CornerRadius}"
                    Opacity="0" />

            <!--  Click overlay  -->
            <Border x:Name="ClickOverlay"
                    Background="{Binding Source={x:Static properties:Settings.Default}, Path=Color_Interaction, Mode=OneTime}"
                    BorderBrush="Transparent"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="{TemplateBinding CornerRadius}"
                    Opacity="0" />

            <ToggleButton x:Name="ToggleButtonWrapper"
                          HorizontalAlignment="Stretch"
                          VerticalAlignment="Stretch"
                          Background="Transparent"
                          FocusVisualStyle="{StaticResource FocusVisualStyle}"
                          Focusable="True"
                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                          Style="{StaticResource WrapperToggle}">

                <Grid Margin="{TemplateBinding Padding}">

                    <!--  Title  -->
                    <ContentControl x:Name="TitleContent"
                                    Content="{TemplateBinding Title}"
                                    Focusable="False"
                                    IsHitTestVisible="False"
                                    TextElement.Foreground="{Binding Source={x:Static properties:Settings.Default}, Path=Color_OnSurface, Mode=OneTime}"
                                    Visibility="Collapsed" />

                    <!--  Selected Value  -->
                    <ContentPresenter x:Name="ContentPresenter"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      Content="{TemplateBinding SelectionBoxItem}"
                                      ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                      ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                      ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                      IsHitTestVisible="False"
                                      TextElement.Foreground="{Binding Source={x:Static properties:Settings.Default}, Path=Color_OnSurface, Mode=OneTime}" />
                </Grid>

            </ToggleButton>

            <!--  PopUp  -->
            <Popup x:Name="PART_Popup"
                   AllowsTransparency="True"
                   IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                   Placement="{TemplateBinding PopUpPlacementMode}"
                   PlacementTarget="{Binding ElementName=GridComboBox}"
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                   VerticalOffset="{TemplateBinding PopupVerticalOffset}">

                <theme:SystemDropShadowChrome x:Name="ShadowWrapper"
                                              MinWidth="{TemplateBinding PopupMinimumWidth}"
                                              MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                              Margin="10"
                                              VerticalAlignment="Bottom"
                                              CornerRadius="{TemplateBinding CornerRadius}"
                                              RenderOptions.BitmapScalingMode="NearestNeighbor"
                                              Color="Transparent">
                    <Border x:Name="DropDownBorder"
                            Background="{TemplateBinding PopUpBackground}"
                            CornerRadius="{TemplateBinding CornerRadius}">
                        <Border Margin="0"
                                BorderBrush="{TemplateBinding PopUpBorderBrush}"
                                BorderThickness="1"
                                CornerRadius="{TemplateBinding CornerRadius}">
                            <controls:ScrollViewer x:Name="DropDownScrollViewer"
                                                   Margin="4"
                                                   IsInnerScrollbarsArrangement="True">
                                <Grid RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas HorizontalAlignment="Left" VerticalAlignment="Top">
                                        <Border x:Name="opaqueRect"
                                                Width="{Binding ActualWidth, ElementName=DropDownBorder}"
                                                Height="{Binding ActualHeight, ElementName=DropDownBorder}"
                                                Background="{Binding Background, ElementName=DropDownBorder}"
                                                CornerRadius="{TemplateBinding CornerRadius}" />
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter"
                                                    KeyboardNavigation.DirectionalNavigation="Contained"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Grid>
                            </controls:ScrollViewer>
                        </Border>
                        <Border.Effect>
                            <DropShadowEffect BlurRadius="10"
                                              Opacity="0.1"
                                              ShadowDepth="0"
                                              Color="{Binding Source={x:Static properties:Settings.Default}, Path=Color_Shadow, Mode=OneTime}" />
                        </Border.Effect>
                    </Border>
                </theme:SystemDropShadowChrome>
            </Popup>
        </Grid>

        <ControlTemplate.Triggers>

            <Trigger Property="IsFullWidthPopUp" Value="True">
                <Setter TargetName="ShadowWrapper" Property="Width" Value="{Binding ElementName=ToggleButtonWrapper, Path=ActualWidth}" />
            </Trigger>

            <Trigger Property="IsMenu" Value="True">
                <Setter TargetName="TitleContent" Property="Visibility" Value="Visible" />
                <Setter TargetName="ContentPresenter" Property="Visibility" Value="Collapsed" />
            </Trigger>

            <EventTrigger RoutedEvent="MouseEnter">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Storyboard.TargetName="HoverOverlay"
                                         Storyboard.TargetProperty="Opacity"
                                         From="0"
                                         To="1"
                                         Duration="0:0:0.1" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>

            <EventTrigger RoutedEvent="MouseLeave">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Storyboard.TargetName="HoverOverlay"
                                         Storyboard.TargetProperty="Opacity"
                                         From="1"
                                         To="0"
                                         Duration="0:0:0.1" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>

            <Trigger Property="IsDropDownOpen" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="ClickOverlay"
                                             Storyboard.TargetProperty="Opacity"
                                             From="0"
                                             To="1"
                                             Duration="0:0:0.1" />


                            <DoubleAnimation BeginTime="0:0:0.1"
                                             Storyboard.TargetName="ClickOverlay"
                                             Storyboard.TargetProperty="Opacity"
                                             From="1"
                                             To="0"
                                             Duration="0:0:0.1" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
            </Trigger>

            <Trigger SourceName="PART_Popup" Property="HasDropShadow" Value="true">
                <Setter TargetName="ShadowWrapper" Property="Opacity" Value="1" />
            </Trigger>

            <Trigger Property="HasItems" Value="false">
                <Setter TargetName="DropDownBorder" Property="Height" Value="55" />
                <Setter TargetName="DropDownBorder" Property="Width" Value="100" />
            </Trigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true" />
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
            </MultiTrigger>

            <Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
                <Setter TargetName="opaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer, Mode=OneTime}" />
                <Setter TargetName="opaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer, Mode=OneTime}" />
            </Trigger>

        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type controls:ComboBox}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Background" Value="{Binding Source={x:Static properties:Settings.Default}, Path=Color_Surface, Mode=OneTime}" />
        <Setter Property="PopUpBackground" Value="{Binding Source={x:Static properties:Settings.Default}, Path=Color_Surface, Mode=OneTime}" />
        <Setter Property="PopUpBorderBrush" Value="{Binding Source={x:Static properties:Settings.Default}, Path=Color_Outline, Mode=OneTime}" />
        <Setter Property="Cursor" Value="{Binding Source={x:Static properties:Settings.Default}, Path=UI_CursorType, Mode=OneTime}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CornerRadius" Value="{Binding Source={x:Static properties:Settings.Default}, Path=UI_CardCornerRadius, Mode=OneTime}" />
        <Setter Property="BorderBrush" Value="{Binding Source={x:Static properties:Settings.Default}, Path=Color_OutlineVariant, Mode=OneTime}" />
        <Setter Property="Foreground" Value="{Binding Source={x:Static properties:Settings.Default}, Path=Color_OnSurface, Mode=OneTime}" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="PopUpPlacementMode" Value="MousePoint" />
        <Setter Property="ItemContainerStyle" Value="{DynamicResource ComboBoxItem}" />
        <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>

</ResourceDictionary>
